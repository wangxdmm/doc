on:
  push:
    branches:
      - main

name: Create Release

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  changelog:
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    name: Create Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3
      - name: Create Conventional Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: "./Cargo.toml"
          version-path: "package.version"
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
  linux:
    name: Linux Build
    runs-on: ubuntu-latest
    needs: changelog
    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-musl,
            x86_64-unknown-linux-gnu,
            i686-unknown-linux-gnu,
            aarch64-unknown-linux-gnu,
          ]
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3
        with:
          tag: ${{ needs.changelog.outputs.tag }}
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Install Build-Tools
        run: sudo apt-get update && sudo apt-get install build-essential gcc-multilib
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.changelog.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/doc
          asset_name: doc_${{ runner.OS }}_${{ matrix.target }}
          asset_content_type: application/x-elf

  windows:
    name: Windows Build
    runs-on: windows-latest
    needs: changelog
    strategy:
      matrix:
        target: [i686-pc-windows-msvc, x86_64-pc-windows-msvc]
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3
        with:
          tag: ${{ needs.changelog.outputs.tag }}
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.changelog.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/doc.exe
          asset_name: doc_${{ runner.OS }}_${{ matrix.target }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  macos:
    name: MacOS Build
    runs-on: macos-latest
    needs: changelog
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3
        with:
          tag: ${{ needs.changelog.outputs.tag }}
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.changelog.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/doc
          asset_name: doc_${{ runner.OS }}_${{ matrix.target }}
          asset_content_type: application/x-elf
